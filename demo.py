#!/usr/bin/env python3
"""
Ejemplo simple del coding agent sin cargar el modelo completo
√ötil para probar la l√≥gica sin el overhead del modelo
"""

import sys
from pathlib import Path
import tools

def mock_model_response(prompt):
    """
    Simula respuestas del modelo para testing r√°pido
    En un caso real, esto vendr√≠a del modelo de IA
    """
    
    # Buscar palabras clave en el prompt para simular respuestas
    prompt_lower = prompt.lower()
    
    if "crea" in prompt_lower and "archivo" in prompt_lower and "hello" in prompt_lower:
        return """
        Thought:
        El usuario quiere que cree un archivo llamado hello.py. Voy a usar la herramienta write_file para crear este archivo con un contenido simple que imprima "Hola Mundo".
        
        Action:
        write_file('hello.py', 'print("Hola Mundo")')
        """
    
    elif "lista" in prompt_lower and ("archivos" in prompt_lower or "directorio" in prompt_lower):
        return """
        Thought:
        El usuario quiere ver el contenido del directorio actual. Usar√© list_directory para mostrar todos los archivos y carpetas.
        
        Action:
        list_directory('.')
        """
    
    elif "lee" in prompt_lower or "muestra" in prompt_lower:
        return """
        Thought:
        El usuario quiere leer un archivo. Usar√© read_file para mostrar su contenido.
        
        Action:
        read_file('hello.py')
        """
    
    else:
        return """
        Thought:
        No estoy seguro de qu√© hacer con esta solicitud. Voy a listar el directorio actual para entender mejor el contexto.
        
        Action:
        list_directory('.')
        """

def parse_action(response):
    """Parsea la respuesta para extraer la acci√≥n"""
    import re
    
    match = re.search(r"Action:\s*(\w+)\((.*?)\)", response, re.DOTALL)
    
    if match:
        function_name = match.group(1)
        args_str = match.group(2)
        
        if args_str.strip():
            # Manejo simple de argumentos
            args = [arg.strip().strip("'\"") for arg in args_str.split(',')]
        else:
            args = []
        
        return function_name, args
    
    return None, None

def run_demo_agent(goal):
    """Ejecuta una demostraci√≥n del agente sin modelo real"""
    
    print(f"ü§ñ Demo del Coding Agent")
    print(f"üìã Objetivo: {goal}")
    print("-" * 50)
    
    # Simular el prompt que se enviar√≠a al modelo
    prompt = f"""
    {tools.TOOL_DESCRIPTIONS}
    
    Eres un agente de IA. Tu objetivo es: {goal}
    
    Responde con tu razonamiento y la acci√≥n a tomar.
    """
    
    print("üí≠ Generando respuesta...")
    
    # Obtener respuesta simulada
    response = mock_model_response(prompt)
    print(f"Respuesta del modelo:\n{response}")
    
    # Parsear la acci√≥n
    function_name, args = parse_action(response)
    
    if function_name and function_name in tools.AVAILABLE_TOOLS:
        print(f"\nüîß Ejecutando: {function_name}({', '.join(args)})")
        
        # Ejecutar la herramienta
        function_to_call = tools.AVAILABLE_TOOLS[function_name]
        
        try:
            result = function_to_call(*args)
            print(f"üì§ Resultado:\n{result}")
            return True
        except Exception as e:
            print(f"‚ùå Error: {e}")
            return False
    else:
        print("‚ùå No se pudo parsear una acci√≥n v√°lida")
        return False

def main():
    """Funci√≥n principal del demo"""
    
    if len(sys.argv) > 1:
        goal = " ".join(sys.argv[1:])
    else:
        goal = "Crea un archivo hello.py que imprima 'Hola Mundo'"
    
    print("üß™ MODO DEMO - Sin modelo real de IA")
    print("Este demo simula el comportamiento del agente para testing r√°pido\n")
    
    success = run_demo_agent(goal)
    
    if success:
        print("\n‚úÖ Demo completado exitosamente!")
    else:
        print("\n‚ùå Demo fall√≥")
    
    print("\nPara usar el agente completo con IA real:")
    print("  python main.py 'tu objetivo aqu√≠'")

if __name__ == "__main__":
    main()
